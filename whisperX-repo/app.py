from fastapi import FastAPI, File, UploadFile
from fastapi.responses import JSONResponse
import subprocess
import os
import shutil
import uvicorn
import multipart

app = FastAPI()


@app.get('/health')
async def health():
    print("-------------- OK --------------------")
    return {"status": "ok"}


@app.post("/transcribe/")
async def transcribe_audio(file: UploadFile = File(...)):
    print("In the transcription")
    output_dir = "output-whisperx"
    temp_path = f"temp_{file.filename}"

    # Save temporary audio file
    with open(temp_path, "wb") as audio_file:
        content = await file.read()
        audio_file.write(content)

    try:
        # Ensure output directory exists
        if not os.path.exists(output_dir):
            os.makedirs(output_dir)

        # Call whisperx with the saved audio file and additional parameters
        print("In the transcription ------- Results")
        result = subprocess.run([
            'whisperx', '--language', 'en', '--output_dir', output_dir, temp_path
        ], capture_output=True, text=True)

        # Assuming the output is stored in files within output_dir
        # List the files generated by whisperx
        files = os.listdir(output_dir)
        file_data = {file: open(os.path.join(output_dir, file), 'r').read() for file in files}
    except Exception as e:
        file_data = {"error": str(e)}
    finally:
        # Clean up the temporary file and output directory
        os.remove(temp_path)
        shutil.rmtree(output_dir)

    return JSONResponse(content=file_data)


if __name__ == "__main__":
    print("Into FastAPI")
    uvicorn.run(app, host="0.0.0.0", port=9080)
